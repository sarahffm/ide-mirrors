#!/usr/bin/env bash

# $1: path to the software or provider directory
# $2: software name
function doCurlVersions() {
  local versions_url=$(cat "${1}/versions-url")
  # range of major versions for Java
  # debug changed range
  versions_url="${versions_url//\$\{major\}/[8-11]}"

  if [ ! -f "${1}/versions-url-op" ]
  then
    curl -s "${versions_url}" | awk -F "\"" '/tag_name/ {print $4}' | sed '/-beta.*/d;/-alpha.*/d;/-rc.*/d;/-pre.*/d;/-preview.*/d' | sort -V -r >> "./${2}/available-versions.tmp"
  else
    local versions_url_op=$(cat "${1}/versions-url-op")
    # debug remove -s option
    eval "curl "${versions_url}" | "${versions_url_op}"" >> "./${2}/available-versions.tmp"
  fi
}

for software in */;
do
  # debug
  if [ "${software}" == "java/" ]
  then
    software=${software::-1}
    subdir_count=$(find "./${software}" -maxdepth 1 -type d | wc -l)

    # debug
    echo
    echo "Software: ${software}"

    if [ "${subdir_count}" -eq 1 ]
    then
      doCurlVersions "./${software}" "${software}"
    else
      for subdir in ./${software}/*/;
      do
        subdir=$(basename "${subdir}")
        doCurlVersions "./${software}/${subdir}" "${software}"
      done
    fi

    if [ "${software}" == "java" ]
    then
      temp_path="./${software}/available-versions.tmp"
      # debug
      echo "Before sorting:"
      cat "${temp_path}"

      sed -i 's/_/\.0\.0./' "${temp_path}" && sort -V -r -o "${temp_path}" && sed -i 's/\.0\.0./_/' "${temp_path}"

      # Java workaround: convert versions to a different format (e.g. 11.0.9_11 -> 11.0.9.0.0.11), sort it, and convert it back
      # sed 's/_/\.0\.0./' "./${software}/available-versions.tmp" | sort -V -r | sed 's/\.0\.0./_/' > "./${software}/available-versions1.tmp"

      #sed -i 's/_/\.0\.0./' "./${software}/available-versions.tmp"
      #sort -V -r -o "./${software}/available-versions.tmp" "./${software}/available-versions.tmp"
      #sed -i 's/\.0\.0./_/' "./${software}/available-versions.tmp"

      #echo "New file:"
      #cat "./${software}/available-versions1.tmp"

      echo "After sorting:"
      cat "${temp_path}"
    else
      sort -V -r -o "./${software}/available-versions.tmp" "./${software}/available-versions.tmp"
    fi

    # update available-versions if curl was successful
    if [[ ! -z $(grep '[^[:space:]]' "./${software}/available-versions.tmp") ]]
    then
      mv "./${software}/available-versions.tmp" "./${software}/available-versions"
    else
      rm "./${software}/available-versions.tmp"
      echo "${software}: Crawling versions failed. 'available-versions' has not been updated."
    fi

    # debug
    echo "Available versions:"
    cat "./${software}/available-versions"

  # debug
  fi
done
