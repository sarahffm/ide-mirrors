#!/usr/bin/env bash

for software in */;
do
  # debug
  if [ "${software}" == "eclipse/" ]
  then

    software=${software::-1}
    subdir_count=$(find "./${software}" -maxdepth 1 -type d | wc -l)
    chmod +x ./${software}/*

    # debug
    echo
    echo "Software: ${software}"

    if [ "${subdir_count}" -eq 1 ]
    then
      # temporary (remove when all files ready)
      if [ -f "./${software}/versions-url" ]
      then
        versions_url=$(cat "./${software}/versions-url")

        if [[ "${versions_url}" == *"api.github"* ]]
        then
          curl -s "${versions_url}" | awk -F "\"" '/tag_name/ {print $4}' | sort -V -r > "./${software}/available_versions.tmp"
        else
          versions_url_op=$(cat "./${software}/versions-url-op")
          eval "curl -s "${versions_url}" | "${versions_url_op}"" > "./${software}/available_versions.tmp"
        fi
      fi
    else
      for subdir in ./${software}/*/;
      do
        subdir=$(basename "${subdir}")
        versions_url=$(cat "./${software}/${subdir}/versions-url")

        echo "${subdir}" >> "./${software}/available_versions.tmp"

        if [[ "${versions_url}" == *"api.github"* ]]
        then
          curl -s "${versions_url}" | awk -F "\"" '/tag_name/ {print $4}' | sort -V -r >> "./${software}/available_versions.tmp"
        else
          versions_url_op=$(cat "./${software}/${subdir}/versions-url-op")
          eval "curl -s "${versions_url}" | "${versions_url_op}"" >> "./${software}/available_versions.tmp"
        fi
        echo "======" >> "./${software}/available_versions.tmp"
      done
    fi

    # debug
    echo "Temp file:"
    cat "./${software}/available_versions.tmp"

    # update available_versions if curl was successful
    if [ -s "./${software}/available_versions.tmp" ]
    then
      mv "./${software}/available_versions.tmp" "./${software}/available_versions"
    else
      rm "./${software}/available_versions.tmp"
    fi

    # debug
    echo "Available versions:"
    cat "./${software}/available_versions"

  # debug
  fi
done
