#!/usr/bin/env bash

version_filter='/-beta.*/d;/-alpha.*/d;/-rc.*/d;/-pre.*/d;/-preview.*/d'

for software in */;
do
  # debug
  if [ "${software}" == "helm/" ]
  then
    software=${software::-1}
    subdir_count=$(find "./${software}" -maxdepth 1 -type d | wc -l)

    # debug
    echo
    echo "Software: ${software}"

    if [ "${subdir_count}" -eq 1 ]
    then
      chmod +x ./${software}/versions-url
      versions_url=$(cat "./${software}/versions-url")

      if [ ! -f "./${software}/versions-url-op" ]
      then
        curl -s "${versions_url}" | awk -F "\"" '/tag_name/ {print $4}' | sed "${version_filter}" | sort -V -r > "./${software}/available-versions.tmp"
      else
        chmod +x ./${software}/versions-url-op
        versions_url_op=$(cat "./${software}/versions-url-op")
        eval "curl -s "${versions_url}" | "${versions_url_op}"" > "./${software}/available-versions.tmp"
      fi
      
    else
      for subdir in ./${software}/*/;
      do
        subdir=$(basename "${subdir}")
        chmod +x ./${software}/${subdir}/versions-url
        versions_url=$(cat "./${software}/${subdir}/versions-url")

        # debug
        echo "${subdir}" >> "./${software}/available-versions.tmp"

        if [[ "${versions_url//$/\\$}" == *"major"* ]]
        then
          # debug
          echo "major in URL."
          for major in {16..16};  # debug: 8..20
          do
            versions_url="${versions_url//\$\{major\}/${major}}"

            if [ ! -f "./${software}/${subdir}/versions-url-op" ]
            then
              curl -s "${versions_url}" | awk -F "\"" '/tag_name/ {print $4}' | sed "${version_filter}" | sort -V -r >> "./${software}/available-versions.tmp"
            else
              chmod +x ./${software}/${subdir}/versions-url-op
              versions_url_op=$(cat "./${software}/${subdir}/versions-url-op")
              # final should be with -s option
              eval "curl "${versions_url}" | "${versions_url_op}"" >> "./${software}/available-versions.tmp"
            fi

            versions_url=$(cat "./${software}/${subdir}/versions-url")
          done
        else
          # debug
          echo "No major in URL."
          if [ ! -f "./${software}/${subdir}/versions-url-op" ]
          then
            curl -s "${versions_url}" | awk -F "\"" '/tag_name/ {print $4}' | sed "${version_filter}" | sort -V -r >> "./${software}/available-versions.tmp"
          else
            chmod +x ./${software}/${subdir}/versions-url-op
            versions_url_op=$(cat "./${software}/${subdir}/versions-url-op")
            eval "curl -s "${versions_url}" | "${versions_url_op}"" >> "./${software}/available-versions.tmp"
          fi
        fi
      done
    fi

    # update available-versions if curl was successful
    if [ -s "./${software}/available-versions.tmp" ]
    then
      mv "./${software}/available-versions.tmp" "./${software}/available-versions"
    else
      rm "./${software}/available-versions.tmp"
      echo "Crawling versions for ${software} failed. available-versions has not been updated."
    fi

    # debug
    echo "Available versions:"
    cat "./${software}/available-versions"
  
  # debug
  fi
done
